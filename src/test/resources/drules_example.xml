<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE drules>

<drules>

  <task id="varenv" name="Gas Oil variables">
    <source jndi="jdbc/sqlite-db1" id="datasource1">
      <sql>
        <![CDATA[
            SELECT * FROM commodities WHERE name = '${test.name}' ORDER BY day, name
        ]]>
      </sql>
    </source>
    <source jndi="jdbc/sqlite-db2" id="datasource2">
      <sql>
        <![CDATA[
            SELECT * FROM commodities WHERE name = 'Gas Oil' ORDER BY day, name
        ]]>
      </sql>
    </source>
    <rowCheck constraint="sorted">
      <join type="INNER" using="day, name" source="datasource1, datasource2">
        <onMatch>
          <check expr="datasource1.get('price') == datasource2.get('price')">
            <onFail>
              <throwWarning max="15"/>
            </onFail>
          </check>
        </onMatch>
        <onMissing source="datasource1">
          <throwWarning max="5000"/>
        </onMissing>
        <onMissing source="datasource2">
          <throwError max="1"/>
        </onMissing>
      </join>
    </rowCheck>
  </task>

  <task id="error-test" name="Gas Oil check">
    <source jndi="jdbc/sqlite-db1" id="datasource1">
      <sql scope="pre">
        <![CDATA[
            CREATE TABLE IF NOT EXISTS energy_data AS
            SELECT * FROM commodities WHERE name <> 'Gold'
        ]]>
      </sql>
      <sql id="minmax">
        <![CDATA[
            SELECT min(high_price) AS min_high_price,
                   max(low_price) AS max_low_price
            FROM energy_data
            WHERE name = 'Gas Oil'
        ]]>
      </sql>
      <sql>
        <![CDATA[
            SELECT day, name, price, open_price, high_price, low_price, volume, change
            FROM energy_data
            WHERE price > ${minmax.min_high_price}
              AND price < ${minmax.max_low_price}
              AND name = 'Gas Oil'
            GROUP BY day, name
        ]]>
      </sql>
    </source>

    <source jndi="jdbc/sqlite-db2" id="datasource2">
      <sql>
        <![CDATA[
            SELECT day, name, price, open_price, high_price, low_price, volume, change
            FROM commodities
            WHERE name = 'Gas Oil'
              AND day <> '13/07/2015'
            GROUP BY day, name
        ]]>
      </sql>
    </source>

    <rowCheck constraint="sorted">
      <join type="INNER" using="day, name" source="datasource1, datasource2">
        <onMatch>
          <check>
            <expr>
            <![CDATA[
              Math.abs(datasource1.get('price') - datasource2.get('price')) < 0.50 * datasource2.get('open_price')
            ]]>
            </expr>
            <onSuccess>
              <executeSql>
                <source jndi="jdbc/sqlite-db_stats">
                  <sql>
                  <![CDATA[
                    INSERT INTO dummy (metric, counter)
                    VALUES ('${datasource1.name}', ${datasource1.volume})
                  ]]>
                  </sql>
                </source>
              </executeSql>
            </onSuccess>
            <onFail>
              <throwWarning max="10"/>
            </onFail>
          </check>
        </onMatch>
        <onMissing source="datasource1">
          <throwWarning max="10"/>
        </onMissing>
        <onMissing source="datasource2">
          <throwError max="10"/>
        </onMissing>
      </join>
    </rowCheck>
  </task>

  <task id="test-loop" name="Test loop">
    <source jndi="jdbc/sqlite-db1" id="datasource1">
      <sql>
        <![CDATA[
			DROP TABLE IF EXISTS test_loop_1;
        ]]>
      </sql>
      <sql>
        <![CDATA[
			CREATE TABLE test_loop_1 (
				branch	TEXT,
				value	TEXT
			);
        ]]>
      </sql>
      <foreach key="key" values="a, b, c">
	      <sql>
	        <![CDATA[
				INSERT INTO test_loop_1 VALUES(trim('${key}'), 'abc')
	        ]]>
	      </sql>
      </foreach>
      <foreach ref="">
      
      </foreach>
      <sql>
        <![CDATA[
            SELECT branch, value
            FROM test_loop_1
            ORDER BY branch, value
        ]]>
      </sql>
    </source>

    <source jndi="jdbc/sqlite-db2" id="datasource2">
      <sql>
        <![CDATA[
            SELECT 'a' branch, 'abc' value
            UNION ALL
            SELECT 'B' branch, 'abc' value
            UNION ALL
            SELECT 'c' branch, 'abc' value
        ]]>
      </sql>
    </source>

    <rowCheck constraint="sorted">
      <join type="INNER" using="branch" source="datasource1, datasource2">
        <onMatch>
          <check>
            <expr>
            <![CDATA[
              datasource1.get('value') == datasource2.get('value')
            ]]>
            </expr>
            <onFail>
              <throwWarning max="10" />
            </onFail>
          </check>
        </onMatch>
        <onMissing source="datasource1">
          <throwWarning max="10" />
        </onMissing>
        <onMissing source="datasource2">
          <throwError max="10" />
        </onMissing>
      </join>
    </rowCheck>
  </task>

  <task id="test-loop-resultset" name="Test loop ResultSet">
    <source jndi="jdbc/sqlite-db1" id="datasource1">
      <sql>
        <![CDATA[
			DROP TABLE IF EXISTS test_loop_resultset;
        ]]>
      </sql>
      <sql>
        <![CDATA[
			CREATE TABLE test_loop_resultset (
				branch	TEXT,
				value	TEXT
			);
        ]]>
      </sql>
      <foreach key="key" values="a, b, c">
	      <sql>
	        <![CDATA[
				INSERT INTO test_loop_resultset VALUES(trim('${key}'), 'abc')
	        ]]>
	      </sql>
      </foreach>

      <sql id="dummy">
        <![CDATA[
            SELECT branch, value
            FROM test_loop_resultset
            ORDER BY branch, value
        ]]>
      </sql>

      <foreach ref="dummy">
	      <sql>
	        <![CDATA[
				INSERT INTO test_loop_resultset VALUES('${dummy.branch}2', '${dummy.value}')
	        ]]>
	      </sql>
      </foreach>
      
      <sql>
        <![CDATA[
            SELECT branch, value
            FROM test_loop_resultset
            ORDER BY branch, value
        ]]>
      </sql>
    </source>

    <source jndi="jdbc/sqlite-db2" id="datasource2">
      <sql>
        <![CDATA[
            SELECT 'a' branch, 'abc' value
            UNION ALL
            SELECT 'B' branch, 'abc' value
            UNION ALL
            SELECT 'c' branch, 'abc' value
        ]]>
      </sql>
    </source>

    <rowCheck constraint="sorted">
      <join type="INNER" using="branch" source="datasource1, datasource2">
        <onMatch>
          <check>
            <expr>
            <![CDATA[
              datasource1.get('value') == datasource2.get('value')
            ]]>
            </expr>
            <onFail>
              <throwWarning max="10" />
            </onFail>
          </check>
        </onMatch>
        <onMissing source="datasource1">
          <throwWarning max="10" />
        </onMissing>
        <onMissing source="datasource2">
          <throwError max="10" />
        </onMissing>
      </join>
    </rowCheck>
  </task>

</drules>
